{"version":3,"sources":["hooks/useMetaDataApi.js","components/Loader.js","contexts/observatories-context.js","contexts/institutes-context.js","contexts/contacts-context.js","constants/index.js","components/modals/ObservatoryModal.js","components/maps/ObservatoryMarker.js","components/maps/ObservatoriesMap.js","containers/ObservatoriesMap.js","components/ObservatoriesTable.js","containers/ObservatoriesTable.js","contexts/definitive-context.js","components/DefinitivesTable.js","containers/DefinitivesTable.js","components/InstitutesTable.js","containers/InstitutesTable.js","App.js","serviceWorker.js","index.js"],"names":["dataFetchReducer","state","action","type","Object","objectSpread","isLoading","isError","data","payload","Error","useMetaDataApi","initialUrl","initialData","_useState","useState","_useState2","slicedToArray","url","setUrl","_useReducer","useReducer","_useReducer2","dispatch","useEffect","didCancel","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","axios","sent","t0","stop","apply","this","arguments","fetchData","LoaderText","props","item","react_default","createElement","Alert","variant","Spinner","animation","role","className","Loader","contactsState","institutesState","definitiveState","intermagnetState","completed","Modal","show","size","aria-labelledby","centered","Header","Title","id","Body","Loader_LoaderText","ObservatoriesContext","React","createContext","InstitutesContext","ContactsContext","COUNTRY_CODES","aq","ar","at","au","be","bg","br","ca","cf","cl","cn","cz","de","dk","dz","es","et","fi","fk","fr","gb","gf","gl","gr","gs","hr","hu","ie","in","it","jp","kr","kz","lb","mg","mv","mx","na","no","nz","pe","pf","pk","pl","ro","rs","ru","se","sh","sk","sn","tf","tr","tw","ua","us","vn","ws","za","findByKey","elements","key","value","reduce","accumulator","currentElement","ObservatoryModal","onHide","iaga","observatories_context","Consumer","observatories","observatory","closeButton","name","ObservatoryModal_ObservatoryModalBody","defaultProps","ObservatoryModalBody","assign","institutes","contacts","instruments","instruments_ml","lines","institutes_context","contacts_context","map","institute","contact","Container","fluid","Row","Col","sm","ObservatoryModal_ObservatoryModalTable","ObservatoryModal_ObservatoryModalMap","ObservatoryModalTable","latitude","longitude","elevation","country","status","gin","instituteList","values","length","names","abbr","contactsList","idx","address","addresses","currentValue","lang","emails","email","link","concat","href","line","Fragment","tel","fax","lonCorrected","Table","Math","abs","toFixed","title","instrument","ObservatoryModalMap","center","Map","zoom","style","height","width","ref","setTimeout","leafletElement","invalidateSize","TileLayer","attribution","CircleMarker","color","ObservatoryMarker","showModal","onClick","modals_ObservatoryModal","ObservatoriesMap","observatoriesStore","markers","keys","console","warn","maps_ObservatoryMarker","LayersControl","position","BaseLayer","checked","Observatories","observatoriesIaga","obs","maps_ObservatoriesMap","ObservatoriesTable","_useState3","_useState4","setIAGA","gins","forEach","sort","b","indexOf","push","columns","accessor","filterMethod","filter","row","toLowerCase","includes","Filter","onChange","event","target","stat","_ref2","filterable","Cell","Button","original","handleButtonClick","sortable","resizable","defaultSorting","desc","components_ObservatoriesTable","DefinitiveContext","filterInitial","year","republish","filterReducer","newState","modalInitial","modalReducer","DefinitivesTable","definitives","setSelectedObservatories","modalState","modalDispatch","_useReducer3","_useReducer4","filterState","filterDispatch","definitive","iaga_code","years","reverse","textAlign","filtered","onFilteredChange","defaultPageSize","log","Definitives","definitive_context","components_DefinitivesTable","InstitutesTable","inst","imos","ob","join","rel","Institutes","components_InstitutesTable","App","_useMetaDataApi","_useMetaDataApi3","_useMetaDataApi5","_useMetaDataApi7","react_router_dom","basename","components_Loader","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","to","Provider","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3229ebfc.chunk.js","sourcesContent":["/**\n * @module hooks/useMetaDataApi\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n */\nimport { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\n/**\n * Reducer for hook state\n * @param {object} state \n * @param {objcet} action \n */\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\n\n/**\n * Hook\n * ====\n * \n * Download metadata for the provided URL.  JSON object expected.\n * \n * @param {string} initialUrl \n * @param {object} initialData \n */\nconst useMetaDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\n\n\nexport default useMetaDataApi;","/**\n * @module components/Loader\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Spinner, Alert } from 'react-bootstrap';\n\n// Constants\nconst COMPLETED_COUNT = 4;\n\n\n/**\n * Loader text information\n * @param {object} props \n */\nconst LoaderText = (props) => {\n  const {\n    item,\n    isLoading,\n    isError,\n  } = props;\n\n  if (isError) {\n    return (\n      <Alert variant='danger'>\n        <p>Error downloading {item}</p>\n      </Alert>\n    );\n  }\n  else if (isLoading) {\n    return (\n      <Alert variant='info'>\n        <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n        <span>Downloading {item}...</span>\n      </Alert>\n    );\n  }\n  return (\n    <Alert variant='success'>\n      <p>Download {item} complete</p>\n    </Alert>\n  );\n}\n\nLoaderText.propTypes = {\n  item: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n}\n\n\nconst Loader = (props) => {\n  const {\n    contactsState,\n    institutesState,\n    definitiveState,\n    intermagnetState,\n  } = props;\n\n  let completed = 0;\n  completed += (contactsState.isLoading && !contactsState.isError) ? 0 : 1;\n  completed += (institutesState.isLoading && !institutesState.isError) ? 0 : 1;\n  completed += (definitiveState.isLoading && !definitiveState.isError) ? 0 : 1;\n  completed += (intermagnetState.isLoading && !intermagnetState.isError) ? 0 : 1;\n\n  return (\n    <Modal\n      show={ completed !== COMPLETED_COUNT}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          INTERMAGNET metadata\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <LoaderText item='contacts'\n          isLoading={contactsState.isLoading} isError={contactsState.isError} />\n        <LoaderText item='list of institutes'\n          isLoading={institutesState.isLoading} isError={institutesState.isError} />\n        <LoaderText item='definitive information'\n          isLoading={definitiveState.isLoading} isError={definitiveState.isError} />\n        <LoaderText item='intermanget observatory details'\n          isLoading={intermagnetState.isLoading} isError={intermagnetState.isError} />\n      </Modal.Body>\n    </Modal>\n  )\n};\n\n\n\n\nconst stateObject = {\n  isError: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nLoader.propTypes = {\n  contactsState: PropTypes.shape(stateObject).isRequired,\n  institutesState: PropTypes.shape(stateObject).isRequired,\n  definitiveState: PropTypes.shape(stateObject).isRequired,\n  intermagnetState: PropTypes.shape(stateObject).isRequired,\n};\n\n\nexport default Loader;","/**\n * @module contexts/observatories-contexts\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\n\n// Metadata observatories\nconst ObservatoriesContext = React.createContext({});\n\nexport default ObservatoriesContext;\n","/**\n * @module contexts/institutes-contexts\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\n\n// Metadata institutes\nconst InstitutesContext = React.createContext({});\n\nexport default InstitutesContext;\n","/**\n * @module contexts/contacts-contexts\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\n\n// Metadata contact\nconst ContactsContext = React.createContext({});\n\nexport default ContactsContext;\n","/**\n * @module constants\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nexport const COUNTRY_CODES = {\n    aq: 'Antarctica',\n    ar: 'Argentina',\n    at: 'Austria',\n    au: 'Australia',\n    be: 'Belgium',\n    bg: 'Bulgaria',\n    br: 'Brazil',\n    ca: 'Canada',\n    cf: 'Central African Republic',\n    cl: 'Chile',\n    cn: 'China',\n    cz: 'Czech Republic',\n    de: 'Germany',\n    dk: 'Denmark',\n    dz: 'Algeria',\n    es: 'Spain',\n    et: 'Ethiopia',\n    fi: 'Finland',\n    fk: 'Falkland Islands (Islas Malvinas)',\n    fr: 'France',\n    gb: 'United Kingdom',\n    gf: 'French Guiana',\n    gl: 'Greenland',\n    gr: 'Greece',\n    gs: 'South Georgia and the South Sandwich Islands',\n    hr: 'Croatia',\n    hu: 'Hungary',\n    ie: 'Republic of Ireland',\n    in: 'India',\n    it: 'Italy',\n    jp: 'Japan',\n    kr: 'Korea',\n    kz: 'Kazakhstan',\n    lb: 'Lebanon',\n    mg: 'Madagascar',\n    mv: 'Maldives',\n    mx: 'Mexico',\n    na: 'Namibia',\n    no: 'Norway',\n    nz: 'New Zealand',\n    pe: 'Peru',\n    pf: 'French Polynesia',\n    pk: 'Pakistan',\n    pl: 'Poland',\n    ro: 'Romania',\n    rs: 'Republic of Serbia',\n    ru: 'Russia',\n    se: 'Sweden',\n    sh: 'Saint Helena, Ascension and Tristan da Cunha, British Overseas Territories',\n    sk: 'Slovakia',\n    sn: 'Senegal',\n    tf: 'French Southern and Antarctic Lands',\n    tr: 'Turkey',\n    tw: 'Taiwan',\n    ua: 'Ukraine',\n    us: 'United States of America',\n    vn: 'Vietnam',\n    ws: 'Western Samoa',\n    za: 'South Africa',\n  };\n","/**\n * @module modals/ObservatoryModal\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Row, Col, Table, Modal } from 'react-bootstrap';\nimport { Map, TileLayer, CircleMarker } from 'react-leaflet';\n\nimport ObservatoriesContext from '../../contexts/observatories-context';\nimport InstitutesContext from '../../contexts/institutes-context';\nimport ContactsContext from '../../contexts/contacts-context';\n\nimport { COUNTRY_CODES } from '../../constants';\n\n\n/**\n * Search the object with the key value pair\n * @param {[Object]} elements - array to search\n * @param {string} key - key to match\n * @param {*} value - value to match\n */\nconst findByKey = (elements, key, value) => {\n  const reducer = (accumulator, currentElement) => {\n    return (currentElement[key] === value) ? currentElement : accumulator;\n  }\n  return elements.reduce(reducer, {});\n}\n\n\n/**\n * React - Observatory Modal\n * @param {Object} props - see PropTypes\n */\nconst ObservatoryModal = (props) => {\n  const {\n    show,\n    onHide,\n    iaga,\n  } = props;\n\n  return (\n    <ObservatoriesContext.Consumer>\n      { observatories => {\n        if ( !observatories ) return null; // nopthing to show\n        const observatory = findByKey(observatories, 'id', iaga);\n        return (\n          <Modal\n            show={show}\n            onHide={onHide}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                { observatory.name } ({observatory.iaga})\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <ObservatoryModalBody observatory={observatory} />\n            </Modal.Body>\n          </Modal>\n        )\n      }}\n    </ObservatoriesContext.Consumer>\n  );\n};\n\n\n/**\n * show - extend Modal show element of react-bootstrap\n * onHide - extend Modal onHide element of react-bootstrap\n * iaga - iaga code of observatory to show\n */\nObservatoryModal.propTypes = {\n  show: PropTypes.bool,\n  onHide: PropTypes.func,\n  iaga: PropTypes.string.isRequired,\n}\n\nObservatoryModal.defaultProps = {\n  show: true,\n  onHide: () => {},\n}\n\n\n/**\n * Observatory Modal Body\n * ======================\n * \n * We include institutes and contact information that are referenced by ID in the\n * observatory information.\n * \n * @param {Object} props - no requirement at this stage\n */\nconst ObservatoryModalBody = (props) => {\n\n  // Create a copy of the observatory by setting some default values\n  const observatory = Object.assign({institutes: [], contacts: []}, props.observatory);\n  observatory.instruments = (observatory.instruments_ml) ? observatory.instruments_ml[0].lines : [];\n\n  return (\n    <InstitutesContext.Consumer>\n      { institutes => (\n        <ContactsContext.Consumer>\n          { contacts => {\n            observatory.institutes = observatory.institutes.map( institute => {\n              return findByKey(institutes, 'id', institute);\n            });\n            observatory.contacts = observatory.contacts.map( contact => (contact in contacts) ? contacts[contact] : {} );\n            return (\n              <Container fluid>\n                <Row>\n                  <Col sm={12}>\n                    <ObservatoryModalTable {...observatory} />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={12}>\n                    <ObservatoryModalMap {...observatory} />\n                  </Col>\n                </Row>\n              </Container>\n            )\n          }}\n        </ContactsContext.Consumer>\n      )}\n    </InstitutesContext.Consumer>\n  )\n}\n\n\n/**\n * React - Observatory Modal Table\n * @param {Object} props - see PropTypes\n */\nconst ObservatoryModalTable = (props) => {\n\n  const {\n    iaga,\n    name,\n    latitude,\n    longitude,\n    elevation,\n    institutes,\n    country,\n    instruments,\n    contacts,\n    status,\n    gin,\n  } = props;\n\n  // Convert the institute into a list\n  const instituteList = institutes.map( (institute) => {\n    if ( !Object.values(institute).length ) return null;\n\n    return (\n      <li key={institute.id}>{institute.names[0].name} ({institute.names[0].abbr})</li>\n    )\n  });\n\n  // Convert the contacts into a list\n  const contactsList = contacts.map( (contact, idx) => {\n    if ( !Object.values(contact).length ) return null;\n\n    const findAddress = (accumulator, currentValue) => {\n      return (currentValue.lang === 'en') ? currentValue : accumulator;\n    }\n    // We also do a copy of the address since we will remove a property\n    const address = Object.assign({}, contact.addresses.reduce(findAddress, contact.addresses[0]));\n    delete address.lang;\n\n    // We convert the list of emails to links\n    let emails = [];\n    if (contact.emails) {\n      emails = contact.emails.map( (email) => {\n        const link = `mailto:${email}`\n        return (<li key={email}><a href={link}>{email}</a></li>);\n      })\n    }\n    \n    return (\n      <tr key={idx}>\n        <th>Contact</th>\n        <td>\n          <dl>\n            <dt>Name</dt>\n            <dd>{contact.name}</dd>\n            <dt>Address</dt>\n            <dd>\n              {Object.values(address).map((line, idx) => (<div key={idx}>{line}</div>))}\n            </dd>\n            { emails.length > 0 &&\n              <React.Fragment>\n                <dt>Email</dt>\n                <dd><ul>{emails}</ul></dd>\n              </React.Fragment>\n            }\n            <dt>Telephone</dt>\n            <dd>{contact.tel}</dd>\n            { 'fax' in contact && \n              <React.Fragment>\n                <dt>Fax</dt>\n                <dd>{contact.fax}</dd>\n              </React.Fragment>\n            }\n          </dl>\n        </td>\n      </tr>\n    )\n  });\n\n  const lonCorrected = (longitude > 180) ? longitude - 360 : longitude;\n\n  return (\n    <Table size='sm'>\n      <tbody>\n        <tr>\n          <th>Name</th>\n          <td>{name}</td>\n        </tr>\n        <tr>\n          <th>IAGA code</th>\n          <td>{iaga}</td>\n        </tr>\n        <tr>\n          <th>Country</th>\n          <td>{(country in COUNTRY_CODES) ? COUNTRY_CODES[country] : country}</td>\n        </tr>\n        <tr>\n          <th>Coordinates</th>\n          <td>{Math.abs(latitude).toFixed(4)}{(latitude >= 0)?'N':'S'}, {Math.abs(lonCorrected).toFixed(4)}{(lonCorrected >= 0)?'E':'W'}</td>\n        </tr>\n        <tr>\n          <th>Elevation (m)</th>\n          <td>{elevation}</td>\n        </tr>\n        <tr>\n          <th>Status</th>\n          <td>{status}</td>\n        </tr>\n        <tr>\n          <th><abbr title='Geomagnetic Information Node'>GIN</abbr></th>\n          <td>{gin}</td>\n        </tr>\n        { instituteList.length > 0 && \n          <tr>\n            <th>Institute(s)</th>\n            <td>\n              <ul>\n                {instituteList}\n              </ul>\n            </td>\n          </tr>\n        }\n        { instruments.length > 0 && \n          <tr>\n            <th>Instrument(s)</th>\n            <td>\n              <ul>\n                {instruments.map((instrument, idx) => (<li key={idx}>{instrument}</li>))}\n              </ul>\n            </td>\n          </tr>\n        }\n        { contactsList }\n      </tbody>\n    </Table>\n  );\n};\n\n\nObservatoryModalTable.propTypes = {\n  iaga: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  elevation: PropTypes.number.isRequired,\n  institutes: PropTypes.arrayOf(PropTypes.object),\n  country: PropTypes.string.isRequired,\n  instruments: PropTypes.arrayOf(PropTypes.string),\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  status: PropTypes.string.isRequired,\n  gin: PropTypes.string,\n};\n\nObservatoryModalTable.defaultProps = {\n  institutes: [],\n  instruments: [],\n  contacts: [],\n  gin: '',\n};\n\n\n/**\n * Observatory Modal Map\n * =====================\n * \n * @param {Object} props \n */\nconst ObservatoryModalMap = (props) => {\n  const {\n    latitude,\n    longitude,\n    status,\n  } = props;\n\n  const lonCorrected = (longitude > 180) ? longitude - 360 : longitude;\n  const center = [latitude, lonCorrected];\n  const zoom = 14;\n\n  return (\n    <Map center={center} zoom={zoom}\n      style={{height: '400px', width: '100%'}}\n      ref={(map) => (map) ? setTimeout(() => map.leafletElement.invalidateSize(true), 100):null}>\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <CircleMarker\n        center={[latitude, lonCorrected]}\n        color={status === 'imo' ? 'red': 'grey'}\n      />\n    </Map>\n  )\n}\n\nObservatoryModalMap.propTypes = {\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  status: PropTypes.string.isRequired,\n};\n\nexport default ObservatoryModal;","/**\n * @module components/ObservatoriesMap/ObservatoryMarker\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n */\n\n// General modules\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { CircleMarker } from 'react-leaflet';\n\nimport ObservatoryModal from '../modals/ObservatoryModal';\n\n/**\n * React - Observatory Marker on leaflet map\n * @param {Object} props - see PropTypes \n */\nconst ObservatoryMarker = (props) => {\n  const {\n    latitude,\n    longitude,\n    status,\n    iaga,\n  } = props;\n\n  const [ show, showModal ] = useState(false);\n\n  return (\n    <CircleMarker\n      center={[\n        latitude,\n        (longitude > 180) ? longitude - 360.0 : longitude,\n      ]}\n      onClick={() => showModal(true)}\n      color={status === 'imo' ? 'red': 'grey'}\n    >\n      <ObservatoryModal\n        show={show}\n        onHide={() => showModal(false)}\n        iaga={iaga} />\n    </CircleMarker>\n  );\n}\n\n/**\n * latitude - latitude coordinate\n * longitude - longitude coordiante\n * status - status of the observatory ('imo' == active)\n * iaga - iaga code for populating details\n */\nObservatoryMarker.propTypes = {\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  status: PropTypes.string.isRequired,\n  iaga: PropTypes.string.isRequired,\n}\n\nexport default ObservatoryMarker;\n","/**\n * @module components/ObservatoryMap\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n */\n\n// General modules\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, LayersControl, TileLayer } from 'react-leaflet';\n\nimport ObservatoriesContext from '../../contexts/observatories-context';\nimport ObservatoryMarker from './ObservatoryMarker';\n\n/**\n * Search the object with the key value pair\n * @param {[Object]} elements - array to search\n * @param {string} key - key to match\n * @param {*} value - value to match\n */\nconst findByKey = (elements, key, value) => {\n  const reducer = (accumulator, currentElement) => {\n    return (currentElement[key] === value) ? currentElement : accumulator;\n  }\n  return elements.reduce(reducer, {});\n}\n\n/**\n * React - Observatory Map\n * @param {Object} props - see PropTypes \n */\nconst ObservatoriesMap = (props) => {\n  const {\n    observatories,\n    center,\n    zoom,\n  } = props;\n  \n  return (\n    <ObservatoriesContext.Consumer>\n      { observatoriesStore => {\n        const markers = observatories.map(iaga => {\n          const observatory = findByKey(observatoriesStore, 'id', iaga);\n          if (Object.keys(observatory).length === 0) {\n            console.warn(`Could not find ${iaga} for marker`)\n            return null;\n          }\n          return (<ObservatoryMarker\n            key={observatory.id}\n            latitude={observatory.latitude}\n            longitude={observatory.longitude}\n            status={observatory.status}\n            iaga={observatory.iaga}\n          />);\n        });\n        return (\n          <Map center={center} zoom={zoom}>\n            <LayersControl position='topright'>\n              <LayersControl.BaseLayer name=\"Streets\">\n                <TileLayer\n                  attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n              </LayersControl.BaseLayer>\n              <LayersControl.BaseLayer checked name=\"Satellite\">\n                <TileLayer\n                  attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n                  url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                />\n              </LayersControl.BaseLayer>\n            </LayersControl>\n            { markers }\n          </Map>\n        );\n      }}\n    </ObservatoriesContext.Consumer>\n    \n  );\n}\n\n/**\n * observatories - list of IAGA codes to plot on map, library will search for details in context\n * center - center of map\n * zoom - zoom level of map\n */\nObservatoriesMap.propTypes = {\n  observatories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n};\n\nObservatoriesMap.defaultProps = {\n  center: [0, 0],\n  zoom: 2,\n}\n\nexport default ObservatoriesMap;\n","/**\n * @module containers/Observatories\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\nimport { Col } from 'react-bootstrap';\n\n// Components\nimport ObservatoriesMap from '../components/maps/ObservatoriesMap';\n\n// Hooks\nimport ObservatoriesContext from '../contexts/observatories-context';\n\nconst Observatories = () => {\n  return (\n    <Col sm={12}>\n      <ObservatoriesContext.Consumer>\n        { observatories => {\n          const observatoriesIaga = (observatories) ? observatories.map( obs => obs.id ) : [];\n          return (\n            <ObservatoriesMap observatories={observatoriesIaga} />\n          );\n        }}\n      </ObservatoriesContext.Consumer>\n    </Col>\n  )\n}\n\nexport default Observatories;","/**\n * @module components/ObservatoriesTable\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n *\n * Station Table\n * ==============\n */\n\n// General modules\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from 'react-table';\nimport { Button } from 'react-bootstrap';\n\nimport ObservatoryModal from './modals/ObservatoryModal';\n\nimport { COUNTRY_CODES } from '../constants';\n\n/**\n * Observatory Table\n * =================\n * @param {Object} props - see PropTypes \n */\nconst ObservatoriesTable = (props) => {\n  const {\n    observatories,\n  } = props;\n\n  const [ show, showModal ] = useState(false);\n  const [ iaga, setIAGA ] = useState('');\n  \n  const gins = [];\n  const status = [];\n  const data = (observatories) ? observatories : [];\n\n  // Convert the country code to full string\n  data.forEach( obs => {\n    obs.country = (obs.country in COUNTRY_CODES) ? COUNTRY_CODES[obs.country] : obs.country;\n  });\n\n  // sort the observatory by iaga code\n  data.sort((a, b) => {\n    if (a.iaga > b.iaga) {\n      return 1;\n    } else if (a.iaga < b.iaga) {\n      return -1;\n    }\n    return 0;\n  })\n\n  // get the list of gins\n  data.forEach( obs => {\n    if (('gin' in obs) && (gins.indexOf(obs.gin) < 0)) {\n      gins.push(obs.gin);\n    }\n  });\n\n  // get the list of status\n  data.forEach( obs => {\n    if (('status' in obs) && (status.indexOf(obs.status) < 0)) {\n      status.push(obs.status);\n    }\n  });\n\n  \n  // action on table\n  const handleButtonClick = (row) => {\n    setIAGA(row.original.iaga);\n    showModal(true);\n  }\n\n  // Define the column information for the react-table\n  const columns = [{\n    Header: 'IAGA code',\n    id: 'iaga',\n    accessor: 'iaga',\n    // do a filter as case-incentive\n    filterMethod: (filter, row) => row[filter.id] ? row[filter.id].toLowerCase().includes(filter.value.toLowerCase()) : true\n  }, {\n    Header: 'Name',\n    accessor: 'name',\n    // do a filter as case-incentive\n    filterMethod: (filter, row) => row[filter.id] ? row[filter.id].toLowerCase().includes(filter.value.toLowerCase()) : true\n  }, {\n    Header: 'Country',\n    accessor: 'country',\n    // do a filter as case-incentive\n    filterMethod: (filter, row) => row[filter.id] ? row[filter.id].toLowerCase().includes(filter.value.toLowerCase()) : true\n  }, {\n    Header: 'Latitude',\n    accessor: 'latitude',\n  }, {\n    Header: 'Longitude',\n    accessor: 'longitude',\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    // filter as select from the status list\n    Filter: ({ filter, onChange }) =>\n      <select\n        onChange={event => onChange(event.target.value)}\n        style={{ width: \"100%\" }}\n        value={ filter ? filter.value : '' }\n      >\n        <option key='all' value=''>All</option>\n        { status.map((stat) => <option key={stat} value={stat}>{stat}</option>)}\n      </select>\n    \n  }, {\n    Header: 'GIN',\n    accessor: 'gin',\n    // filter as select from the gin list\n    Filter: ({ filter, onChange }) =>\n      <select\n        onChange={event => onChange(event.target.value)}\n        style={{ width: \"100%\" }}\n        value={ filter ? filter.value : '' }\n      >\n        <option key='all' value=''>All</option>\n        { gins.map((gin) => <option key={gin} value={gin}>{gin}</option>)}\n      </select>\n  }, {\n    Header: 'Details',\n    accessor: 'properties.id',\n    filterable: false,\n    // when the button is clicked, open the modal\n    Cell: row => (<Button onClick={() => handleButtonClick(row)}>view</Button>),\n  }];\n\n  return (\n    <React.Fragment>\n      <ReactTable\n        data={data}\n        className=\"-striped -highlight\"\n        columns={columns}\n        filterable\n        sortable\n        resizable\n        defaultSorting={[{\n          id: 'iaga',\n          desc: false,\n        }]}\n      />\n      <ObservatoryModal\n        show={show}\n        onHide={() => showModal(false)}\n        iaga={iaga} />\n    </React.Fragment>\n  );\n};\n\n/**\n * observatories - list of observatories object as stored in BGS\n */\nObservatoriesTable.propTypes = {\n  observatories: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ObservatoriesTable;","/**\n * @module containers/ObservatoriesTable\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\nimport { Col } from 'react-bootstrap';\n\n// Hooks\nimport ObservatoriesContext from '../contexts/observatories-context';\n\n// Contexts\nimport ObservatoriesTable from '../components/ObservatoriesTable';\n\nconst Observatories = () => {\n  return (\n    <Col sm={12}>\n      <ObservatoriesContext.Consumer>\n        { observatories => (\n          <ObservatoriesTable observatories={(observatories) ? observatories : []} />\n        )}\n      </ObservatoriesContext.Consumer>\n    </Col>\n  )\n}\n\nexport default Observatories;","/**\n * @module contexts/definitive-contexts\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\n\n// Metadata definitive\nconst DefinitiveContext = React.createContext({});\n\nexport default DefinitiveContext;\n","/**\n * @module components/DefinitivesTable\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n *\n * Station Table\n * ==============\n */\n\n// General modules\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from 'react-table';\nimport { Button } from 'react-bootstrap';\n\nimport 'react-table/react-table.css';\n\nimport ObservatoryModal from './modals/ObservatoryModal';\n\n\n// create initial state for filter reducer\nconst filterInitial = {\n  year: '',\n  republish: '',\n  iaga: ''\n};\n\n// filter reducer\nconst filterReducer = (state, action) => {\n  switch (action.type) {\n    case 'setYear':\n      return {...state, year: action.payload};\n    case 'setRepublish':\n      return {...state, republish: action.payload};\n    case 'setIAGA':\n      return {...state, iaga: action.payload};\n    case 'saveFilter':\n      // save the filter returned by react-table into the structure\n      const newState = Object.assign({}, filterInitial);\n      action.payload.forEach((filter) => newState[filter.id] = filter.value);\n      return newState;\n    default:\n      throw new Error();\n  }\n};\n\n// create initial state for modal reducer\nconst modalInitial = {\n  show: false,\n  iaga: '',\n}\n\n// modal reducer\nconst modalReducer = (state, action) => {\n  switch (action.type) {\n    case 'setShow':\n      return {...state, show: action.payload};\n    case 'setIAGA':\n      return {...state, iaga: action.payload};\n    case 'setModal':\n      return action.payload;\n    default:\n      throw new Error();\n  }\n};\n\n/**\n * React - Defintives table\n * @param {Object} props - see PropTypes \n */\nconst DefinitivesTable = (props) => {\n  const {\n    definitives,\n    setSelectedObservatories,\n  } = props;\n\n\n  // reducer state for modal\n  const [ modalState, modalDispatch ] = useReducer(modalReducer, modalInitial);\n  // reducer state for filters\n  const [ filterState, filterDispatch ] = useReducer(filterReducer, filterInitial);\n\n  const defs = (definitives) ? definitives : [];\n  const data = [];\n  \n  defs.forEach( definitive => {\n    const year = definitive.id;\n    definitive.observatories.forEach( obs => {\n      data.push({\n        year: year,\n        iaga: obs.iaga_code,\n        republish: ('republish' in obs) ? obs.republish : '',\n      });\n    });\n  })\n\n  // sort the data by year\n  data.sort((a, b) => {\n    if (a.year > b.year) {\n      return -1;\n    } else if (a.iaga < b.iaga) {\n      return 1;\n    }\n    return 0;\n  })\n\n  // Get the list of years with observatory per each\n  const years = {};\n  data.forEach(row => {\n    if( row.year in years ) {\n      years[row.year].push(row.iaga);\n    } else {\n      years[row.year] = [];\n    }\n  })\n\n  // action on table\n  const handleButtonClick = (row) => {\n    modalDispatch({\n      type: 'setModal',\n      payload: {\n        show: true,\n        iaga: row.original.iaga,\n      }\n    })\n  }\n\n  const columns = [{\n    Header: 'Year',\n    accessor: 'year',\n    Filter: ({ filter, onChange }) => (\n      <select\n        onChange={event => {\n          onChange(event.target.value);\n          setSelectedObservatories((event.target.value in years) ? years[event.target.value] : []);\n        }}\n        style={{ width: \"100%\" }}\n        value={ filterState.year }\n      >\n        <option value=''>All</option>\n        { Object.keys(years).reverse().map((year) => (\n           <option key={year} value={year}>{year}</option>\n        ))}\n      </select>\n    ),\n    Cell: row => <div style={{ textAlign: \"center\" }}>{row.value}</div>\n  }, {\n    Header: 'Republish',\n    accessor: 'republish',\n    Cell: row => <div style={{ textAlign: \"center\" }}>{row.value}</div>\n  }, {\n    Header: 'IAGA code',\n    accessor: 'iaga',\n    filterMethod: (filter, row) => row[filter.id] ? row[filter.id].toLowerCase().includes(filter.value.toLowerCase()) : true,\n    Cell: row => <div style={{ textAlign: \"center\" }}>{row.value}</div>\n  }, {\n    Header: 'Details',\n    accessor: 'properties.id',\n    filterable: false,\n    Cell: row => (<Button onClick={() => handleButtonClick(row)}>view</Button>),\n  }];\n\n  return (\n    <React.Fragment>\n      <ReactTable\n        data={data}\n        className=\"-striped -highlight\"\n        columns={columns}\n        filterable\n        sortable\n        resizable\n        filtered={[{\n          id: 'year',\n          value: filterState.year,\n        },{\n          id: 'republish',\n          value: filterState.republish,\n        },{\n          id: 'iaga',\n          value: filterState.iaga,\n        }]}\n        onFilteredChange={(filtered) => {\n          // save the state in case of rerender\n          filterDispatch({type: 'saveFilter', payload: filtered});\n        }}\n        defaultPageSize={10}\n      />\n      <ObservatoryModal\n        show={modalState.show}\n        onHide={() => modalDispatch({ type: 'setShow', payload: false })}\n        iaga={modalState.iaga} />\n    </React.Fragment>\n  );\n};\n\nDefinitivesTable.propTypes = {\n  definitives: PropTypes.arrayOf(PropTypes.object),\n  setSelectedObservatories: PropTypes.func,\n};\n\nDefinitivesTable.defaultProps = {\n  setSelectedObservatories: (values) => {console.log(values)},\n}\n\nexport default DefinitivesTable;","/**\n * @module containers/DefinitivesTable\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React, { useState } from 'react';\nimport { Col } from 'react-bootstrap';\n\n// Hooks\nimport DefinitiveContext from '../contexts/definitive-context';\n\n// Components\nimport DefinitivesTable from '../components/DefinitivesTable';\nimport ObservatoryMap from '../components/maps/ObservatoriesMap';\n\nconst Definitives = () => {\n\n  const [ observatories, setSelectedObservatories ] = useState([]);\n\n  return (\n    <DefinitiveContext.Consumer>\n      { definitives => (\n        <React.Fragment>\n          <Col sm={4}>\n            <DefinitivesTable\n              definitives={definitives}\n              setSelectedObservatories={setSelectedObservatories}  \n            />\n          </Col>\n          <Col sm={8}>\n            <ObservatoryMap observatories={observatories} />\n          </Col>\n        </React.Fragment>\n      )}\n    </DefinitiveContext.Consumer>\n  )\n}\n\nexport default Definitives;","/**\n * @module components/InstitutesTable\n * @author Charles Blais, Natural Resource Canada <charles.blais@canada.ca>\n *\n * Institutes Table\n * ================\n */\n\n// General modules\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from 'react-table';\n\nimport { COUNTRY_CODES } from '../constants';\n\n/**\n * Observatory Table\n * =================\n * @param {Object} props - see PropTypes \n */\nconst InstitutesTable = (props) => {\n  const {\n    institutes,\n    observatories,\n  } = props;\n\n  const data = (institutes) ? institutes : [];\n  const obs = (observatories) ? observatories: [];\n\n  // Convert the institutes code to full string\n  data.forEach( inst => {\n    inst.country = (inst.country in COUNTRY_CODES) ? COUNTRY_CODES[inst.country] : inst.country;\n    inst.imos = obs.filter(ob => {\n      if('institutes' in ob && ob.status === 'imo') {\n        return ob.institutes.includes(inst.id);\n      }\n      return false;\n    }).map(ob => ob.iaga).join(\", \");\n  });\n\n  // sort the institutes by id code\n  data.sort((a, b) => {\n    if (a.id > b.id) {\n      return 1;\n    } else if (a.id < b.id) {\n      return -1;\n    }\n    return 0;\n  })\n\n  // Define the column information for the react-table\n  const columns = [{\n    Header: 'Name',\n    accessor: 'names[0].name',\n  }, {\n    Header: 'Abbr',\n    accessor: 'names[0].abbr',\n    width: 75,\n  }, {\n    Header: 'IMOs',\n    accessor: 'imos',\n  }, {\n    Header: 'Link',\n    accessor: 'links[0].link',\n    width: 100,\n    Cell: row => {\n      if(row.value)\n        return (<a target=\"_blank\" rel=\"noopener noreferrer\" href={row.value}>Website</a>);\n      else\n        return null;\n    }\n  }];\n\n  return (\n    <React.Fragment>\n      <ReactTable\n        data={data}\n        className=\"-striped -highlight\"\n        columns={columns}\n        filterable\n        sortable\n        resizable\n      />\n    </React.Fragment>\n  );\n};\n\n/**\n * institutes - list of institutes object as stored in BGS\n */\nInstitutesTable.propTypes = {\n  institutes: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default InstitutesTable;","/**\n * @module containers/ObservatoriesTable\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\nimport React from 'react';\nimport { Col } from 'react-bootstrap';\n\n// Hooks\nimport InstitutesContext from '../contexts/institutes-context';\n\n// Contexts\nimport InstitutesTable from '../components/InstitutesTable';\nimport ObservatoriesContext from '../contexts/observatories-context';\n\nconst Institutes = () => {\n  return (\n    <Col sm={12}>\n      <ObservatoriesContext>\n        { observatories => (\n          <InstitutesContext.Consumer>\n            { institutes => (\n              <InstitutesTable\n                institutes={(institutes) ? institutes : []} \n                observatories={(observatories) ? observatories : []} />\n            )}\n          </InstitutesContext.Consumer>\n        )}\n      </ObservatoriesContext>\n    </Col>\n  )\n}\n\nexport default Institutes;","/**\n * @module App\n * @author Charles Blais, Natural Resources Canada <charles.blais@canada.ca>\n */\n\n// import the CSS list\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-table/react-table.css';\nimport 'leaflet/dist/leaflet.css';\n\nimport React from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Row } from 'react-bootstrap';\n\n// Hooks\nimport useMetaDataApi from './hooks/useMetaDataApi';\n\n// Components\nimport Loader from './components/Loader';\nimport ObservatoriesMap from './containers/ObservatoriesMap';\nimport ObservatoriesTable from './containers/ObservatoriesTable';\nimport DefinitivesTable from './containers/DefinitivesTable';\nimport InstitutesTable from './containers/InstitutesTable';\n\n// Contexts\nimport ObservatoriesContext from './contexts/observatories-context';\nimport InstitutesContext from './contexts/institutes-context';\nimport ContactsContext from './contexts/contacts-context';\nimport DefinitiveContext from './contexts/definitive-context';\n\nconst App = () => {\n  const [ contactsState ] = useMetaDataApi('https://geomag.bgs.ac.uk/im_mdata/imag_reports/contacts/?format=json');\n  const [ definitiveState ] = useMetaDataApi('https://geomag.bgs.ac.uk/im_mdata/imag_reports/definitive/?format=json');\n  const [ institutesState ] = useMetaDataApi('https://geomag.bgs.ac.uk/im_mdata/imag_reports/institutes/?format=json');\n  const [ intermagnetState ] = useMetaDataApi('https://geomag.bgs.ac.uk/im_mdata/imag_reports/intermagnet/?format=json');\n\n  return (\n    <HashRouter basename=\"/\">\n      <Loader\n        contactsState={contactsState}\n        definitiveState={definitiveState}\n        institutesState={institutesState}\n        intermagnetState={intermagnetState}\n      />\n\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"https://intermagnet.github.io/\">INTERMAGNET</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/map\">Map of Observatories</Nav.Link>\n            <Nav.Link as={Link} to=\"/imos\">List of Observatories</Nav.Link>\n            <Nav.Link as={Link} to=\"/institutes\">List of Institutes</Nav.Link>\n            <Nav.Link as={Link} to=\"/definitives\">Definitive Data Catologue</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container fluid className='main-content'>\n        <Row>\n          <ObservatoriesContext.Provider value={intermagnetState.data} >\n              <InstitutesContext.Provider value={institutesState.data} >\n                <ContactsContext.Provider value={contactsState.data} >\n                  <DefinitiveContext.Provider value={definitiveState.data}>\n                    <Route exact path=\"/\" component={ObservatoriesTable} />\n                    <Route path=\"/map\" component={ObservatoriesMap} />\n                    <Route path=\"/imos\" component={ObservatoriesTable} />\n                    <Route path=\"/institutes\" component={InstitutesTable} />\n                    <Route path=\"/definitives\" component={DefinitivesTable} />\n                  </DefinitiveContext.Provider>\n                </ContactsContext.Provider>\n              </InstitutesContext.Provider>\n            </ObservatoriesContext.Provider>\n          </Row>\n      </Container>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}